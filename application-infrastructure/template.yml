# This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
# either express or implied. See the License for the specific language governing permissions 
# and limitations under the License.
#
# Atlantis for AWS SAM Deployments
# Starter 00 - Basic API Gateway and Lambda using NodeJS
# Author: Chad Kluck - 63klabs.net
# Version: v2.0.2/2025-05-17

# Documentation, Issues/Feature Requests, Latest Updates, and Security Reports on GitHub:
# https://github.com/63Klabs/atlantis-starter-00-basic-apigw-lambda-nodejs

# Creates a basic web service using API Gateway and Lambda using NodeJS

# USE WITH:
# - Atlantis pipeline/template.yml

AWSTemplateFormatVersion: "2010-09-09"
Transform:  AWS::Serverless-2016-10-31
Description: "A basic web service using API Gateway and Lambda NodeJS - atlantis-starter-00-basic-apigw-lambda-nodejs"

# =============================================================================
# META DATA
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-interface.html
# 

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - 
        Label:
          default: "Application Resource Naming"
        Parameters:
          - Prefix
          - ProjectId
          - StageId
          - S3BucketNameOrgPrefix
          - RolePath
      -
        Label:
          default: "Deployment Environment Information"
        Parameters:
          - DeployEnvironment
          - FunctionGradualDeploymentType
          - DeployRole
      -
        Label:
          default: "External Resources and Alarm Notifications"
        Parameters:
          - ParameterStoreHierarchy
          - AlarmNotificationEmail
          - PermissionsBoundaryArn
      -
        Label:
          default: "Lambda Function Settings"
        Parameters:
          - FunctionTimeOutInSeconds
          - FunctionMaxMemoryInMB
      -
        Label:
          default: "Application Parameters"
        Parameters:
          - ApiPathBase
          - LogRetentionInDaysForPROD
          - LogRetentionInDaysForDEVTEST

# =============================================================================
# PARAMETERS
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
#

Parameters:

  # ---------------------------------------------------------------------------
  # Application Resource Naming

  Prefix:
    Type: String
    Description: "Prefix pre-pended to all resources. This can be thought of as a Name Space used to identify ownership/access for teams, departments, etc. For example, resources named ws-* could belong to the web service team and could have IAM permissions to allow access to other ws-* resources. The Prefix must have a corresponding CloudFormation Service Role. Short, descriptive 2-6 character values work best. Due to resource naming length restrictions, length of Prefix + Project ID should not exceed 28 characters. Resources are named <Prefix>-<ProjectId>-<StageId>-<ResourceId>"
    Default: "acme" 
    AllowedPattern: "^[a-z][a-z0-9-]{0,6}[a-z0-9]$"
    MinLength: 2
    MaxLength: 8
    ConstraintDescription: "2 to 8 characters. Lower case alphanumeric and dashes. Must start with a letter and end with a letter or number. Length of Prefix + Project ID should not exceed 28 characters."

  ProjectId:
    Type: String
    Description: "This is the Project or Application Identifier. If you receive 'S3 bucket name too long' errors during stack creation, then you must shorten the Project ID or use an S3 Org Prefix. Due to resource naming length restrictions, length of Prefix + Project ID should not exceed 28 characters. Resources are named <Prefix>-<ProjectId>-<StageId>-<ResourceId>"
    AllowedPattern: "^[a-z][a-z0-9-]{0,24}[a-z0-9]$"
    MinLength: 2
    MaxLength: 26
    ConstraintDescription: "Minimum of 2 characters (suggested maximum of 20). Lower case alphanumeric and dashes. Must start with a letter and end with a letter or number. Length of Prefix + Project ID should not exceed 28 characters."

  StageId:
    Type: String
    Description: "This is an alias for the branch. It does not need to match CodeCommitBranch or DeployEnvironment. Due to resource naming restrictions you can use this to provide shorter names without special characters that are allowed in branch names. For example if you have a 'test/feature-98' branch, you could use 'tf98' as the StageId. Resources are named <Prefix>-<ProjectId>-<StageId>-<ResourceId>"
    AllowedPattern: "^[a-z][a-z0-9-]{0,6}[a-z0-9]$"
    MinLength: 2
    MaxLength: 8
    ConstraintDescription: "2 to 8 characters. Lower case alphanumeric and dashes. Must start with a letter and end with a letter or number."

  S3BucketNameOrgPrefix:
    Type: String
    Description: "By default, to enforce uniqueness, buckets include account and region in the bucket name. However, due to character limits, you can specify your own S3 prefix (like an org code). This will be used in addition to the Prefix entered above. Note that this length is shared with the recommended length of 20 characters for Resource Identifiers. So if you have a 10 character S3BucketNameOrgPrefix, you are limited to 10 characters for your bucket name identifier in your templates. Buckets are named <Prefix>-<Region>-<AccountId>-<ProjectId>-<StageId>-<ResourceId> or <S3OrgPrefix>-<Prefix>-<ProjectId>-<StageId>-<ResourceId>"
    Default: ""
    AllowedPattern: "^[a-z0-9][a-z0-9-]{0,18}[a-z0-9]$|^$"
    ConstraintDescription: "May be empty or 2 to 20 characters (8 or less recommended). Lower case alphanumeric and dashes. Must start and end with a letter or number."

  RolePath:
    Type: String
    Description: "Path to use for IAM Roles and Policies. You may wish to separate out your applications from users, or create seperate paths per prefix or application. Specific paths may required by permission boundaries. Ex: /ws-hello-world-test/ or /app_role/"
    Default: "/"
    AllowedPattern: "^\\/([a-zA-Z0-9-_]+[\\/])+$|^\\/$"
    ConstraintDescription: "May only contain alphanumeric characters, forward slashes, underscores, and dashes. Must begin and end with a slash."

  # ---------------------------------------------------------------------------
  # Deployment Environment Identification

  DeployEnvironment:
    Type: String
    Description: "What deploy/testing environment will this run under? An environment can contain multiple stages (for example 'test' and 't98' would be in 'TEST' environment, and 'beta' and 'prod' stages would deploy to 'PROD'). Utilize this environment variable to determine your tests, app logging levels, and conditionals in the template. For example, PROD will use gradual deployment while DEV and TEST is AllAtOnce. Other resources, such as dashboards and alarms  (which cost money) could be created in PROD and not DEV or TEST. Suggested use: DEV for local SAM deployment, TEST for test/QA deployments, PROD for stage, beta, and main/prod deployments."
    Default: "PROD"
    AllowedValues: ["DEV", "TEST", "PROD"]
    ConstraintDescription: "Must specify DEV, TEST, or PROD."

  FunctionGradualDeploymentType:
    Type: String
    Description: "For production environments, what method do you want to use to gradually deploy before rolling back in case of errors. Note that when 'DeployEnvironment' is TEST or DEV, gradual deploy will not be enabled and will be same as All At Once"
    Default: "Linear10PercentEvery3Minutes"
    AllowedValues:
      - "Canary10Percent5Minutes" # Canary = First 10%, then after x minutes, full 90% (full deploy after x minutes)
      - "Canary10Percent10Minutes"
      - "Canary10Percent15Minutes"
      - "Canary10Percent30Minutes"
      - "Linear10PercentEvery1Minute" # Linear = Total of 10 deploys every x minutes: 10%, wait x minutes, another 10%, wait, 10%.... (full deploy after 10 * x minutes)
      - "Linear10PercentEvery2Minutes"
      - "Linear10PercentEvery3Minutes"
      - "Linear10PercentEvery10Minutes"
      - "AllAtOnce" # All at once. Recommended only for TEST and DEV environments.

  DeployRole:
    Type: String
    Description: "IAM role to allow AWS CodeDeploy to manage deployment of AWS Lambda functions"

  # ---------------------------------------------------------------------------
  # External Resources and Alarm Notifications

  ParameterStoreHierarchy:
    Type: String
    Description: "Parameters specific to the application may be organized within a hierarchy based on your organizational or operations structure. For example, /Finance/ops/ for this value would then generate /Finance/ops/<DeployEnvironment>/<Prefix>-<ProjectId>-<StageId>/<parameterName>. Must either be a single '/' or begin and end with a '/'."
    Default: "/"
    AllowedPattern: "^\\/([a-zA-Z0-9_.\\-]*[\\/])+$|^\\/$"
    ConstraintDescription: "Must only contain alpha-numeric, dashes, underscores, or slashes. Must be a single slash or begin and end with a slash. (/Finance/, /Finance/ops/, or /)"

  AlarmNotificationEmail:
    Type: String
    Description: "Email address to send notifications to when alarms are triggered. Be sure to check the inbox as you will need to confirm the subscription."
    AllowedPattern: "^[\\w\\-\\.]+@([\\w\\-]+\\.)+[\\w\\-]{2,4}$"
    ConstraintDescription: "A valid email address"

  PermissionsBoundaryArn:
    Type: String
    Description: "Permissions Boundary is a policy attached to a role to further restrict the permissions of the role. Your organization may or may not require boundaries. If left empty, no permissions boundary will be used."
    Default: ""
    AllowedPattern: "^$|^arn:aws:iam::\\d{12}:policy\\/[\\w+=,.@\\-\\/]*[\\w+=,.@\\-]+$"
    ConstraintDescription: "Must be empty or a valid IAM Policy ARN in the format: arn:aws:iam::{account_id}:policy/{policy_name}"

  # ---------------------------------------------------------------------------
  # Lambda Function Settings

  FunctionTimeOutInSeconds:
    Type: Number
    Description: "Time out in seconds for the Lambda function. API Gateway times out after 30 seconds. This web service is ideal for requests that can complete in less than 10 seconds"
    Default: 10
    MinValue: 3
    MaxValue: 30

  FunctionMaxMemoryInMB:
    Type: Number
    Description: "If you are handling large responses, you will need to increase the size. Monitor CloudWatch logs"
    Default: 128
    AllowedValues: [128, 192, 256, 320, 384, 448, 512]
    ConstraintDescription: "Min 128, Max 512 in increments of 64"

  FunctionArchitecture:
    Type: String
    Description: "The instruction set architecture for the Lambda function. Lambda functions support x86_64 and arm64 architectures. arm64 has better processing than default x86_64 - but the layers and binaries you use must support it."
    Default: "arm64"
    AllowedValues: ["x86_64", "arm64"]

  # ---------------------------------------------------------------------------
  # Application Settings

  ApiPathBase:
    Type: String
    Description: "The path API Gateway uses as the first segment in the invoked Uniform Resource Identifier (URI). Since API Gateway generates random characters for the domain, it can be helpful to use this in identifying applications and stages. If a custom domain is used it can be masked and hidden from visitors. For example: xyz08ryz.apigateway.aws.com/pets or xyz08ryz.apigateway.aws.com/myapp or xyz08ryz.apigateway.aws.com/myapp-test. It is recommended you set this in the template-config.json file and allow the stage to be dynamically appended."
    Default: "api"
    AllowedPattern: ^[a-z0-9]([a-z0-9-_]*[a-z0-9])?$
    MaxLength: 128
    MinLength: 1
    ConstraintDescription: "1-128 lowercase alpha numeric, hyphens, and underscores. Must begin and end with an alphanumeric character."

  LogRetentionInDaysForPROD:
    Type: Number
    Description: "How long should CloudWatch logs be kept in a PRODUCTION environment?"
    Default: 90
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]

  LogRetentionInDaysForDEVTEST:
    Type: Number
    Description: "How long should CloudWatch logs be kept in a DEV or TEST environment?"
    Default: 7
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]

# =============================================================================
# CONDITIONS
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-conditions.html
#

Conditions:
  IsProduction: !Equals [!Ref DeployEnvironment, "PROD"]
  # IsNotProduction: !Not [!Equals [!Ref DeployEnvironment, "PROD"]]
  # IsNotDevelopment: !Not [!Equals [!Ref DeployEnvironment, "DEV"]]
  # IsTest: !Equals [!Ref DeployEnvironment, "TEST"]
  # IsDevelopment: !Equals [!Ref DeployEnvironment, "DEV"]
  # CreateProdResources: !Equals [!Ref DeployEnvironment, "PROD"]
  # CreateTestResources: !Equals [!Ref DeployEnvironment, "TEST"]
  # CreateDevResources: !Equals [!Ref DeployEnvironment, "DEV"]
  # UseS3BucketNameOrgPrefix: !Not [!Equals [!Ref S3BucketNameOrgPrefix, ""]]
  HasPermissionsBoundaryArn: !Not [!Equals [!Ref PermissionsBoundaryArn, ""]]
  CreateAlarms: !Equals [!Ref DeployEnvironment, "PROD"] 
  # IsArmArch: !Equals [!Ref FunctionArchitecture, "arm64"]

# =============================================================================
# GLOBALS
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy-globals.html
#

Globals:
  Api:
    OpenApiVersion: 3.0.0 # Prevents extra stage called Stage in API Gateway https://www.internetkatta.com/how-to-prevent-aws-sam-from-creating-the-default-stage-in-api-gateway-stage

# =============================================================================
# RESOURCES
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html  
#

Resources:

  # ---------------------------------------------------------------------------
  # API Gateway Resources

  # -- API Gateway --
  WebApi:
    Type: AWS::Serverless::Api
    Properties: 
      Name: !Sub '${Prefix}-${ProjectId}-${StageId}-WebApi'
      StageName: !Ref ApiPathBase

  #     # -- The following is how to add logging to the API Gateway --
  #     # -- However, an account admin will need to add a service role to allow API Gateway to write to CloudWatch logs --
  #     # -- See https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html --
  
  #     # Add API Gateway logging configuration
  #     AccessLogSetting:
  #       DestinationArn: !GetAtt ApiGatewayAccessLogGroup.Arn
  #       Format: '{"requestId":"$context.requestId", "extendedRequestId":"$context.extendedRequestId", "ip":"$context.identity.sourceIp", "caller":"$context.identity.caller", "user":"$context.identity.user", "requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod", "path":"$context.path", "resourcePath":"$context.resourcePath", "routeKey":"$context.routeKey", "status":"$context.status", "protocol":"$context.protocol", "responseLength":"$context.responseLength", "integrationError":"$context.integrationErrorMessage", "authorizerError":"$context.authorizer.error", "authorizerStatus":"$context.authorizer.status", "authorizerLatency":"$context.authorizer.latency"}'
      
  #     # Add execution logging to CloudWatch
  #     MethodSettings:
  #       - LoggingLevel: !If [IsProduction, ERROR, INFO]
  #         ResourcePath: '/*'
  #         HttpMethod: '*'
  #         DataTraceEnabled: True #!If [IsProduction, False, True]
  #         MetricsEnabled: True
  
  # # Add CloudWatch Log Group for API Gateway Access Logs
  # ApiGatewayAccessLogGroup:
  #   Type: AWS::Logs::LogGroup
  #   DeletionPolicy: Delete
  #   UpdateReplacePolicy: Retain
  #   Properties:
  #     LogGroupName: !Sub '/aws/apigateway/${Prefix}-${ProjectId}-${StageId}-WebApi-access-logs'
  #     RetentionInDays: !If [IsProduction, 30, 7]

  # # Add CloudWatch Log Group for API Gateway Execution Logs
  # ApiGatewayExecutionLogGroup:
  #   Type: AWS::Logs::LogGroup
  #   DeletionPolicy: Delete
  #   UpdateReplacePolicy: Retain
  #   Properties:
  #     LogGroupName: !Sub '/aws/apigateway/${Prefix}-${ProjectId}-${StageId}-WebApi-execution-logs'  # <-- consistent naming | aws default --> 'API-Gateway-Execution-Logs_${WebApi}/${ApiPathBase}'
  #     RetentionInDays: !If [IsProduction, 30, 7]

  # ---------------------------------------------------------------------------
  # Lambda Function Resources

  # -- Lambda Function --
  AppFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${Prefix}-${ProjectId}-${StageId}-AppFunction'
      Description: "Magical Predictions"
      Role: !GetAtt LambdaExecutionRole.Arn
      PropagateTags: True

      VersionDescription: "Development Stages"
      AutoPublishCodeSha256: "20250226T0936" # Hash This To Overcome AliasLive Update Errors - Undocumented AWS bug workaround
      AutoPublishAlias: live
      DeploymentPreference:
        Enabled: !If [ IsProduction, True,  False] # Gradual deployment only if in production so DEV and TEST aren't hindered
        Type: !If [ IsProduction, !Ref FunctionGradualDeploymentType, "AllAtOnce"]
        Role: !Ref DeployRole
        Alarms:
          Fn::If:
            - CreateAlarms
            - - !Ref AppFunctionErrorsAlarm
            - - !Ref 'AWS::NoValue'

      CodeUri: src/
      Handler: index.handler
      Runtime: nodejs22.x # https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html
      Architectures:
        - !Ref FunctionArchitecture # arm64 has better processing than default x86_64 - but layers and binaries must support
      Timeout: !Ref FunctionTimeOutInSeconds
      MemorySize: !Ref FunctionMaxMemoryInMB

      Environment:
        Variables:
          NODE_ENV: !If [ IsProduction, "production",  "development"] # Note we are past the build installation phase so devDependencies are not installed, however, we can utilize certain tools in development mode
          DEPLOY_ENVIRONMENT: !Ref DeployEnvironment # PROD, TEST, DEV - a different category of environment
          LOG_LEVEL: !If [ IsProduction, "0",  "5"] # 0 for prod, 2-5 for non-prod
          PARAM_STORE_PATH: !Ref ParameterStoreHierarchy # Path to instance specific params /Finance/ops/PROD/acme-myapp-prod/
          LAMBDA_TIMEOUT_IN_SEC: !Ref FunctionTimeOutInSeconds # so we can calculate any external connection timeout in our code

      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
            RestApiId: !Ref WebApi

  # -- LambdaFunction Execution Role --
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${Prefix}-${ProjectId}-${StageId}-LambdaExecRole"
      Description: "IAM Role that allows the Lambda permission to execute and access resources"
      Path: !Ref RolePath
      PermissionsBoundary: !If [HasPermissionsBoundaryArn, !Ref PermissionsBoundaryArn, !Ref 'AWS::NoValue' ]
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole

      # These are the resources your Lambda function needs access to Logs, SSM Parameters, DynamoDb, S3, etc.
      # Define specific actions such as get/put (read/write). Work towards practicing the Principle of Least Privilege
      Policies:
      - PolicyName: !Sub "${Prefix}-${ProjectId}-${StageId}-ExecutionPolicy"
        PolicyDocument:
          Statement:

          - Sid: LambdaAccessToWriteLogs
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource: !GetAtt AppLogGroup.Arn

  # -- Permissions allowing API Gateway to Execute Lambda via Web Console Test button --
  # See https://github.com/awslabs/serverless-application-model/issues/59#issuecomment-348709355
  ConfigLambdaPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AppFunction #!Sub "${AppFunction}:live"
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebApi}/*"

  # -- Lambda Function Error Alarm --

  AppFunctionErrorsAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateAlarms # Either PROD or ALWAYS - Check Conditions
    Properties:
      AlarmDescription: Lambda Function Error > 1
      MetricName: Errors
      Statistic: Sum
      ComparisonOperator: GreaterThanThreshold
      Threshold: 1
      Period: 900
      EvaluationPeriods: 1
      TreatMissingData: notBreaching
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref AppFunction
      AlarmActions:
        - Ref: AppFunctionErrorAlarmNotification

  # -- Lambda Function Notification for Error Alarm --

  AppFunctionErrorAlarmNotification:
      Type: AWS::SNS::Topic
      Condition: CreateAlarms
      Properties: 
        DisplayName: !Sub 'AWS-Alarm-${Prefix}-${ProjectId}-${StageId}'
        FifoTopic: false
        Subscription:
          - Endpoint: !Ref AlarmNotificationEmail
            Protocol: 'email'

  # -- Lambda Log Group with a retention policy --
  AppLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties: 
        LogGroupName: !Sub '/aws/lambda/${Prefix}-${ProjectId}-${StageId}-AppFunction' # Avoid circular reference !Sub "/aws/lambda/${AppFunction}"
        RetentionInDays: !If [ IsProduction, !Ref LogRetentionInDaysForPROD,  !Ref LogRetentionInDaysForDEVTEST]

# =============================================================================
# OUTPUTS
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html
#
# Place anything interesting that you would like to quickly refer to in 
# your cloudformation OUTPUT section. Test URLs, direct links to resources, etc
#

Outputs:
  EndpointURL:
    Description: "Endpoint Test URL"
    Value: !Sub "https://${WebApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiPathBase}/"
  CloudWatchLogGroup:
    Description: "Cloud Watch Log Group for application"
    Value: !Sub "https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logStream:group=%2Faws%2Flambda%2F${AppFunction}"
  LambdaWebConsole:
    Description: "Lambda Web Console"
    Value: !Sub "https://console.aws.amazon.com/lambda/home?region=${AWS::Region}#/functions/${AppFunction}?tab=code"
